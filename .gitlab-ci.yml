# .gitlab-ci.yml
image: node:18

# define pipeline stages
stages:
  - sync-with-github
  - git-clone-lambda-code
  - deploy

# install build tools
before_script:
- apt-get update
- apt-get install -y build-essential
- npm install -g serverless


sync-with-github:
  stage: sync-with-github
  # before_script:
  #   - git config --global user.name "${GITHUB_USER_NAME}"
  #   - git config --global user.email "${GITHUB_USER_EMAIL}"
  script:
    - git remote add github https://$ACCESS_TOKEN@github.com/olcortesb/mimic-sls.git
    - git checkout main
    - git status
    - git push github main


git-clone-lambda-code:
  stage: git-clone-lambda-code
  image: alpine
  before_script:
    - apk add git
  script:
    - git clone --depth=1 -b main https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/serverless4741110/lambdas-src repository
    - rm -rf source_code/.git
    - cd repository
    - rm LICENSE
    - rm README.md
    - sls version
  artifacts:
    paths:
      - repository

# run dummy test command
# test:
#   stage: test
#   script:
#     - cd source_code/src
#     - npm run test

deploy_production:
  stage: deploy

  # tag deploy to an environment for tracking
  environment:
    name: slsprod
  script:
    - cd repository/src
    - npm install
    - cd ../../
    - sls deploy --stage slsprod

  # save build artifacts for publishing
  artifacts:
    paths:
    - .serverless

  # only build when updates are made to "master" branch
  only:
  - main


# deploy_staging:
#   stage: deploy

#   # tag deploy to an environment for tracking
#   environment:
#     name: staging
#   script:
#   - sls deploy --stage staging

#   # save build artifacts for publishing
#   artifacts:
#     paths:
#     - .serverless

#   # only build when updates are made to "staging" branch
#   only:
#   - staging