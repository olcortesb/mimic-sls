service: mimic-sls
frameworkVersion: '4'

custom:
  tableName: 'mimic-${sls:stage}'

provider:
  name: aws
  runtime: nodejs18.x
  stage: slsprod
  region: eu-central-1
  tracing:
    lambda: true
    apiGateway: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
  environment:
    DYNAMO_DB_USE_LOCAL: false
    DYNAMO_DB_REGION: eu-central-1
    MIMIC_TABLE: ${self:custom.tableName}
  apiGateway:
    apiKeys:
      - name: mimic-quota
        description: mimic api key# Optional
    usagePlan:
      quota:
        limit: 5
        offset: 2
        period: MONTH
      throttle:
        burstLimit: 200
        rateLimit: 100

functions:
  slsmimicListens:
    package:
      patterns:
        - repository/src/**
      individually: true
    handler: repository/src/mimicListens.lambdaHandler
    events:
      - http:
          path: /mimic
          method: POST
          private: true
  slsmimicResponse:
    package:
      patterns:
        - ../src/**
      individually: true
    handler: repository/src/mimicResponse.lambdaHandler
    events:
      - http:
          path: /mimic/{id}
          method: GET
          private: true
          request:
            parameters:
              paths:
                id: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}